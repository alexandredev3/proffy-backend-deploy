"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.routes = void 0;
const express_1 = require("express");
const multer_1 = __importDefault(require("multer"));
const multer_2 = __importDefault(require("../config/multer"));
const ClassesController_1 = __importDefault(require("../app/controllers/ClassesController"));
const ConnectionsController_1 = __importDefault(require("../app/controllers/ConnectionsController"));
const UserController_1 = __importDefault(require("../app/controllers/UserController"));
const SessionController_1 = __importDefault(require("../app/controllers/SessionController"));
const ScheduleController_1 = __importDefault(require("../app/controllers/ScheduleController"));
const FileController_1 = __importDefault(require("../app/controllers/FileController"));
const ResetPasswordController_1 = __importDefault(require("../app/controllers/ResetPasswordController"));
const TeachersCountController_1 = __importDefault(require("../app/controllers/TeachersCountController"));
const ClasssesListController_1 = __importDefault(require("../app/controllers/ClasssesListController"));
const auth_1 = __importDefault(require("../app/middlewares/auth"));
const routes = express_1.Router();
exports.routes = routes;
const upload = multer_1.default(multer_2.default);
const classesController = new ClassesController_1.default();
const connectionsController = new ConnectionsController_1.default();
const userController = new UserController_1.default();
const sessionController = new SessionController_1.default();
const scheduleController = new ScheduleController_1.default();
const fileController = new FileController_1.default();
const resetPasswordController = new ResetPasswordController_1.default();
const teachersCountController = new TeachersCountController_1.default();
const classesListController = new ClasssesListController_1.default();
routes.post('/users', userController.store);
routes.post('/session', sessionController.store);
routes.post('/forgot_password', resetPasswordController.create);
routes.put('/reset_password/:token', resetPasswordController.update);
routes.use(auth_1.default);
routes.get('/class', classesListController.index);
routes.get('/classes', classesController.show);
routes.post('/classes', classesController.create);
routes.put('/classes', classesController.update);
routes.delete('/classes/:id', classesController.delete);
routes.get('/classes/schedule', scheduleController.index);
routes.post('/classes/schedule', scheduleController.create);
routes.put('/classes/schedule/:id', scheduleController.update);
routes.delete('/classes/schedule/:id', scheduleController.delete);
routes.post('/files', upload.single('image'), fileController.create);
routes.get('/files/:id', fileController.index);
routes.get('/teachers', teachersCountController.index);
routes.post('/connections', connectionsController.create);
routes.get('/connections', connectionsController.index);
